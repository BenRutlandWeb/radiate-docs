import{o as a,c as e,d as s}from"./app.b8d8e604.js";const n='{"title":"Radiate\\\\Support\\\\Traits\\\\Macroable","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties"},{"level":3,"title":"$macros","slug":"macros"},{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"macro","slug":"macro"},{"level":3,"title":"hasMacro","slug":"hasmacro"},{"level":3,"title":"__callStatic","slug":"callstatic"},{"level":3,"title":"__call","slug":"call"}],"relativePath":"api/support/traits/macroable.md","lastUpdated":1613998048279}',t={},o=s('<h1 id="radiate-support-traits-macroable"><a class="header-anchor" href="#radiate-support-traits-macroable" aria-hidden="true">#</a> Radiate\\Support\\Traits\\Macroable</h1><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="macros"><a class="header-anchor" href="#macros" aria-hidden="true">#</a> <code>$macros</code></h3><p>The registered string macros</p><div class="language-php"><pre><code><span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword type-declaration">array</span> <span class="token variable">$macros</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n</code></pre></div><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="macro"><a class="header-anchor" href="#macro" aria-hidden="true">#</a> <code>macro</code></h3><p>Register a custom macro.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">macro</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token keyword type-declaration">object</span><span class="token operator">|</span><span class="token keyword">callable</span> <span class="token variable">$macro</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">void</span>\n</code></pre></div><h4 id="properties-2"><a class="header-anchor" href="#properties-2" aria-hidden="true">#</a> Properties</h4><ul><li><code>$name</code> The name of the macro</li><li><code>$macro</code> The callback to run when the macro is invoked</li></ul><h3 id="hasmacro"><a class="header-anchor" href="#hasmacro" aria-hidden="true">#</a> <code>hasMacro</code></h3><p>Checks if macro is registered</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">hasMacro</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span>\n</code></pre></div><h4 id="properties-3"><a class="header-anchor" href="#properties-3" aria-hidden="true">#</a> Properties</h4><ul><li><code>$name</code> The name of the macro</li></ul><h3 id="callstatic"><a class="header-anchor" href="#callstatic" aria-hidden="true">#</a> <code>__callStatic</code></h3><p>Dynamically handle calls to the class.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">__callStatic</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-4"><a class="header-anchor" href="#properties-4" aria-hidden="true">#</a> Properties</h4><ul><li><code>$method</code> The called method</li><li><code>$parameters</code> The parameters passed to the called method</li></ul><h3 id="call"><a class="header-anchor" href="#call" aria-hidden="true">#</a> <code>__call</code></h3><p>Dynamically handle calls to the class.</p><div class="language-php"><pre><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$method</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$parameters</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">mixed</span>\n</code></pre></div><h4 id="properties-5"><a class="header-anchor" href="#properties-5" aria-hidden="true">#</a> Properties</h4><ul><li><code>$method</code> The called method</li><li><code>$parameters</code> The parameters passed to the called method</li></ul>',26);t.render=function(s,n,t,r,p,c){return a(),e("div",null,[o])};export default t;export{n as __pageData};
