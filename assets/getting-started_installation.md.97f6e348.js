import{r as e,o as a,c as t,a as i,w as n,d as l,b as r}from"./app.d6b3e7a3.js";const o='{"title":"Installation","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installing A Theme","slug":"installing-a-theme"},{"level":2,"title":"Installing A Plugin","slug":"installing-a-plugin"}],"relativePath":"getting-started/installation.md","lastUpdated":1613601000906}',s={},d=l('<h1 id="installation"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><p>The Radiate framework can be used in either a theme or a plugin. The framework for both is the same to make it easy to achieve the same things in both.</p><p>Radiate utilizes <code>composer</code> for installation of the theme or plugin, and class autoloading.</p><h2 id="installing-a-theme"><a class="header-anchor" href="#installing-a-theme" aria-hidden="true">#</a> Installing A Theme</h2><p>If you are building a theme, navigate to the themes directory of your project:</p><div class="language-"><pre><code>composer create-project radiate/theme theme-name\n</code></pre></div><h2 id="installing-a-plugin"><a class="header-anchor" href="#installing-a-plugin" aria-hidden="true">#</a> Installing A Plugin</h2><p>If you&#39;re building a plugin, navigate to the plugins directory and run:</p><div class="language-"><pre><code>composer create-project radiate/plugin plugin-name\n</code></pre></div>',9),h=i("p",null,[r("Running a Radiate theme and plugin at the same time will cause unexpected behaviour. It is recommended to use only one per project or to use "),i("code",null,"mozart"),r(" or "),i("code",null,"php-scoper"),r(" to prefix your namespaces.")],-1);s.render=function(l,r,o,s,p,u){const c=e("AppNotice");return a(),t("div",null,[d,i(c,{type:"warning"},{default:n((()=>[h])),_:1})])};export default s;export{o as __pageData};
