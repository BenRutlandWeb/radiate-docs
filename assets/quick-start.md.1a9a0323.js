import{o as n,c as a,d as s}from"./app.d6b3e7a3.js";const e='{"title":"Quick Start","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install The Plugin","slug":"install-the-plugin"},{"level":2,"title":"Scaffolding","slug":"scaffolding"},{"level":2,"title":"Publish the Mail Templates","slug":"publish-the-mail-templates"},{"level":2,"title":"The LoginController","slug":"the-logincontroller"}],"relativePath":"quick-start.md","lastUpdated":1613601526837}',t={},p=s('<h1 id="quick-start"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h1><p>This guide is a step-by-step to get you started with a Radiate project.</p><p>We are going to focus on making a plugin, but a theme will work in exactly the same way.</p><p>Our plugin will be for a members only service that will feature:</p><ul><li>Authentication</li><li>Routing</li><li>Templates</li><li>Shortcodes</li><li>Mail</li></ul><h2 id="install-the-plugin"><a class="header-anchor" href="#install-the-plugin" aria-hidden="true">#</a> Install The Plugin</h2><div class="language-bash"><pre><code><span class="token function">composer</span> create-project radiate/plugin members-only\n</code></pre></div><h2 id="scaffolding"><a class="header-anchor" href="#scaffolding" aria-hidden="true">#</a> Scaffolding</h2><p>Here we will generate the bulk of our plugin files using Radiate&#39;s <code>cli</code>.</p><div class="language-bash"><pre><code><span class="token comment"># make the controllers</span>\nwp radiate make:controller Auth<span class="token punctuation">\\</span><span class="token punctuation">\\</span>RegisterController\nwp radiate make:controller Auth<span class="token punctuation">\\</span><span class="token punctuation">\\</span>PasswordResetController\nwp radiate make:controller Auth<span class="token punctuation">\\</span><span class="token punctuation">\\</span>LoginController\nwp radiate make:controller Auth<span class="token punctuation">\\</span><span class="token punctuation">\\</span>ForgotPasswordController\n\n<span class="token comment"># make the middleware</span>\nwp radiate make:middleware Role\n\n<span class="token comment"># make the mailables</span>\nwp radiate make:mail ConfirmRegistration\nwp radiate make:mail ResetPassword\n</code></pre></div><h2 id="publish-the-mail-templates"><a class="header-anchor" href="#publish-the-mail-templates" aria-hidden="true">#</a> Publish the Mail Templates</h2><div class="language-bash"><pre><code>wp radiate vendor:publish --tag<span class="token operator">=</span>mail\n</code></pre></div><h2 id="the-logincontroller"><a class="header-anchor" href="#the-logincontroller" aria-hidden="true">#</a> The LoginController</h2><div class="language-php"><pre><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>\n\n<span class="token keyword">namespace</span> <span class="token package">Theme<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Controllers<span class="token punctuation">\\</span>Auth</span><span class="token punctuation">;</span>\n\n<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Exceptions<span class="token punctuation">\\</span>HttpResponseException</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Radiate<span class="token punctuation">\\</span>Routing<span class="token punctuation">\\</span>Controller</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">LoginController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>\n<span class="token punctuation">{</span>\n    <span class="token comment">/**\n     * Handle the controller action\n     *\n     * @param \\Radiate\\Http\\Request $request\n     * @return mixed\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name static-context">Auth</span><span class="token operator">::</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">remember</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;logged in&#39;</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpResponseException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Failed to log in&#39;</span><span class="token punctuation">,</span> <span class="token number">401</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></code></pre></div>',14);t.render=function(s,e,t,o,l,c){return n(),a("div",null,[p])};export default t;export{e as __pageData};
